#!/bin/bash

#set -x
 
if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Counter for vulnerabilities
vulnerabilities=0

# Declare associative array containing regular expressions (it's going to be expanded in future)
declare -A regexp_list
regexp_list[AWS_Access_Key]='(.*[a|A]ws.*|.*AWS.*|.*[a|A]mazon.*|.*AMAZON.*)(=|:)(\s){0,1}(\W?)([A-Z0-9]{20})(\W?)'
regexp_list[AWS_Secret_Key]='(.*aws.*|.*AWS.*|.*amazon.*|.*AMAZON.*)(=|:)(\s){0,1}(\W?)([A-Za-z0-9/+=]{40})(\W?)'
regexp_list[Password]='(.*)([p|P][a|A][s|S][s|S][w|W][o|O][r|R][d|D])(\s){0,1}(:|=){1,2}(\s){0,1}(\W?)([^[:space:]]){5,25}(\W?)'
regexp_list[Secret_URLs]='http(.?)://((api).(.*).(.*){1,256})'
# I'm not sure it is necessary to block code containing email address, we need to discuss it
#regexp_list[Email_address]='(.*[email]?.*)(\W?)(\b[a-zA-Z0-9.-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9.-]+\b)(\W?)'
#

add_password_regexp='(.*)([p|P][a|A][s|S][s|S][w|W][o|O][r|R][d|D])(\s){0,1}(:|=){1,2}(\s){0,1}(\W?)(.*passwd.*|.*PASSWD.*|.*pass.*|.*PASS.*|.*password.*|.*PASSWORD.*|.*CHANGEIT.*)(\W?)'


 
# Redirect output to stderr.
exec 1>&2


for i in "${!regexp_list[@]}"
do
 ## Check changed files
 echo "Searching patterns for ${i}..."
 if [ "$i" = "Password" ]; then
  KEY=$(git diff --cached --name-only -z $against | xargs -0 cat | grep -E -x ${regexp_list[$i]} | grep -v -E -x $add_password_regexp | wc -l )
  git diff --cached --name-only -z $against | xargs -0 cat | grep -E -x ${regexp_list[$i]} | grep -v -E -x $add_password_regexp
 else
  KEY=$(git diff --cached --name-only -z $against | xargs -0 cat | grep -E -x ${regexp_list[$i]} | wc -l)
  git diff --cached --name-only -z $against | xargs -0 cat | grep -E -x ${regexp_list[$i]}
 fi

 if [ $KEY -ne 0 ]; then
  echo "Found ${KEY} patterns for ${i}"
  echo "Please check your code"
  ((vulnerabilities++))
 else
  echo "Patterns for ${i} are not found"
 fi
done

echo "Number of vulnerabilities :  $vulnerabilities"
 
if [ $vulnerabilities -ne 0 ]; then
    echo "Commit is rejected."
    exit 1
fi
 
# Normal exit
exit 0

